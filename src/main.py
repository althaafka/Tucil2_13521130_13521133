from closestPair import *
from visualisasi import *

print('''
░█████╗░██╗░░░░░░█████╗░░██████╗███████╗░██████╗████████╗  ██████╗░░█████╗░██╗███╗░░██╗████████╗
██╔══██╗██║░░░░░██╔══██╗██╔════╝██╔════╝██╔════╝╚══██╔══╝  ██╔══██╗██╔══██╗██║████╗░██║╚══██╔══╝
██║░░╚═╝██║░░░░░██║░░██║╚█████╗░█████╗░░╚█████╗░░░░██║░░░  ██████╔╝██║░░██║██║██╔██╗██║░░░██║░░░
██║░░██╗██║░░░░░██║░░██║░╚═══██╗██╔══╝░░░╚═══██╗░░░██║░░░  ██╔═══╝░██║░░██║██║██║╚████║░░░██║░░░
╚█████╔╝███████╗╚█████╔╝██████╔╝███████╗██████╔╝░░░██║░░░  ██║░░░░░╚█████╔╝██║██║░╚███║░░░██║░░░
░╚════╝░╚══════╝░╚════╝░╚═════╝░╚══════╝╚═════╝░░░░╚═╝░░░  ╚═╝░░░░░░╚════╝░╚═╝╚═╝░░╚══╝░░░╚═╝░░░

░██████╗░███████╗███╗░░██╗███████╗██████╗░░█████╗░████████╗░█████╗░██████╗░
██╔════╝░██╔════╝████╗░██║██╔════╝██╔══██╗██╔══██╗╚══██╔══╝██╔══██╗██╔══██╗
██║░░██╗░█████╗░░██╔██╗██║█████╗░░██████╔╝███████║░░░██║░░░██║░░██║██████╔╝
██║░░╚██╗██╔══╝░░██║╚████║██╔══╝░░██╔══██╗██╔══██║░░░██║░░░██║░░██║██╔══██╗
╚██████╔╝███████╗██║░╚███║███████╗██║░░██║██║░░██║░░░██║░░░╚█████╔╝██║░░██║
░╚═════╝░╚══════╝╚═╝░░╚══╝╚══════╝╚═╝░░╚═╝╚═╝░░╚═╝░░░╚═╝░░░░╚════╝░╚═╝░░╚═╝


█▄▄ █▄█   ▄▀█ █░░ ▀█▀ █░█ ▄▀█     █▀▀ █▀▀ ▀█▀ ▀█▀ ▄▀█
█▄█ ░█░   █▀█ █▄▄ ░█░ █▀█ █▀█     █▄▄ ██▄ ░█░ ░█░ █▀█

--------------------------------------------------------------------------------------------------------------

''')

n = int(input("𝗠𝗮𝘀𝘂𝗸𝗸𝗮𝗻 𝗯𝗮𝗻𝘆𝗮𝗸 𝘁𝗶𝘁𝗶𝗸 = "))
dimention = int(input("𝗠𝗮𝘀𝘂𝗸𝗸𝗮𝗻 𝗱𝗶𝗺𝗲𝗻𝘀𝗶 𝘆𝗮𝗻𝗴 𝗱𝗶𝗶𝗻𝗴𝗶𝗻𝗸𝗮𝗻 = "))
points = createPoints(n,dimention)
    
print('\n\n\n')
print('''
________________________________________________________________________________
    ____                                      _____                             
    /   )                                     /    '                            
---/__ /-----)__-----------_/_-----__--------/__--------__----)__-----__-----__-
  /    )    /   )  /   /   /     /___)      /         /   )  /   )  /   '  /___)
_/____/____/______(___(___(_ ___(___ ______/_________(___/__/______(___ __(___ _
                                                                                                                                                   
''')
sa = time.time()
closestPairBrute = closestPointBrute(points)
fa = time.time()
print("Closest pair by Brute Force = ", closestPairBrute)
print("Shortest distance           = ", euclidian(closestPairBrute[0],closestPairBrute[1]))
print("Brute time                  = ", (fa-sa)*1000)
print("Euclidean used              = ", euclidianCounter)

print('\n\n\n')
print('''
(                                                                                              
 )\ )                (                         (        (                                       
(()/(  (    )   (    )\ )   (       )          )\ )     )\                 (     (     (   (    
 /(_)) )\  /((  )\  (()/(  ))\   ( /(   (     (()/(   (((_)   (    (     ( )\   ))\   ))\  )(   
(_))_ ((_)(_))\((_)  ((_))/((_)  )(_))  )\ )   ((_))  )\___   )\   )\ )  )(( ) /((_) /((_)(()\  
 |   \ (_)_)((_)(_)  _| |(_))   ((_)_  _(_/(   _| |  ((/ __| ((_) _(_/( ((_)_)(_))( (_))   ((_) 
 | |) || |\ V / | |/ _` |/ -_)  / _` || ' \))/ _` |   | (__ / _ \| ' \))/ _` || || |/ -_) | '_| 
 |___/ |_| \_/  |_|\__,_|\___|  \__,_||_||_| \__,_|    \___|\___/|_||_| \__, | \_,_|\___| |_|   
                                                                           |_|                  

''')
euclidianCounter = 0
sb = time.time()
closestPair = closestPointsDividenConquer(points)
fb = time.time()
print("Closest pair by Divide and Conquer = ",closestPair)
print("Shortest distance                  = ", euclidian(closestPair[0],closestPair[1]))
print("Divide and Conquer time            = ",(fb-sb)*1000)
print("Eucludian used                     = ", euclidianCounter)

print('\n\n\n\n')
print('''
  _                _  _                                      _             
 | | ___  __ _  __| |(_) _ _   __ _   __ _  _ _  __ _  _ __ | |_           
 | |/ _ \/ _` |/ _` || || ' \ / _` | / _` || '_|/ _` || '_ \| ' \  _  _  _ 
 |_|\___/\__,_|\__,_||_||_||_|\__, | \__, ||_|  \__,_|| .__/|_||_|(_)(_)(_)
                              |___/  |___/            |_|                  

''')

makegraph(points,closestPair)